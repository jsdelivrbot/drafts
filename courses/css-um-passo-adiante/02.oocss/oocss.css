/*  Separação entre estrutura (structure) e visual (skin)  */


/* Como podemos ver, as regras abaixo definem tanto estrutura (structure) como visual (skin) */
/* Notamos também que boa parte do código é repetido em cada regra */
.boxred {
    background-color: #f00;
    height: 100px;
    outline: 1px solid #fff;
    width: 100px;
}

.boxgreen {
    background-color: #0f0;
    height: 100px;
    outline: 1px solid #fff;
    width: 100px;
}

.boxblue {
    background-color: #00f;
    height: 100px;
    outline: 1px solid #fff;
    width: 100px;
}

/* Refatorando para utilizar OOCSS  */
/* Agora temos uma regra genérica "box" que define o structure */
.box {
    height: 100px;
    outline: 1px solid #fff;
    width: 100px;
}

/* E três regras específicas red, green e blue que definem o skin */
.box-red {
    background-color: #f00;
}


.box-green {
    background-color: #0f0;
}

.box-blue {
    background-color: #00f;
}

/* ############################################################################################### */

/* Independência entre container e conteúdo */
/* Notamos que a regra definida abaixo estiliza um "h3" filho de um "aside" */

aside h3 {
    color: #777;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 2em;
    line-height: 1;
    text-shadow: rgba(0, 0, 0, .3) 3px 3px 6px;
}

/* Sendo assim, caso tenhamos também um h3 dentro de um footer somos obrigados a copiar a regra,
   mudando apenas o que é específico: */
/* ERRADO ! */
footer h3 {
    color: #777;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1;
    font-size: 1.5em;
    text-shadow: rgba(0, 0, 0, .3) 2px 2px 4px;
}

/* Aplicando OOCSS podemos refatorar para: */
.title {
    color: #777;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1;
}

aside .title {
    font-size: 2em;
    text-shadow: rgba(0, 0, 0, .3) 3px 3px 6px;
}

footer .title {
    font-size: 1.5em;
    text-shadow: rgba(0, 0, 0, .3) 2px 2px 4px;
}